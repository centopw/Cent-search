{"ast":null,"code":"import _slicedToArray from\"G:\\\\1. Project\\\\Code\\\\Node.js\\\\Seach_engine\\\\cent-search\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import API_KEY from\"./keys\";var CONTEXT_KEY=\"0e25504208115c50d\";var useGoogleSearch=function useGoogleSearch(term){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){fetch(\"https://www.googleapis.com/customsearch/v1?key=\".concat(API_KEY,\"&cx=\").concat(CONTEXT_KEY,\"&q=\").concat(term)).then(function(response){return response.json();}).then(function(result){setData(result);});},[term]);return{data:data};};export default useGoogleSearch;","map":{"version":3,"sources":["G:/1. Project/Code/Node.js/Seach_engine/cent-search/src/useGoogleSearch.js"],"names":["React","useEffect","useState","API_KEY","CONTEXT_KEY","useGoogleSearch","term","data","setData","fetch","then","response","json","result"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,QAApB,CAEA,GAAMC,CAAAA,WAAW,CAAG,mBAApB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAU,eACNJ,QAAQ,CAAC,IAAD,CADF,wCACvBK,IADuB,eACjBC,OADiB,eAG9BP,SAAS,CAAC,UAAM,CACZQ,KAAK,0DACiDN,OADjD,gBAC+DC,WAD/D,eACgFE,IADhF,EAAL,CAGCI,IAHD,CAGM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAHd,EAICF,IAJD,CAIM,SAAAG,MAAM,CAAI,CACZL,OAAO,CAACK,MAAD,CAAP,CACH,CAND,EAOH,CARQ,CAQN,CAACP,IAAD,CARM,CAAT,CAUA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAP,CACH,CAdD,CAgBA,cAAeF,CAAAA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API_KEY from \"./keys\";\r\n\r\nconst CONTEXT_KEY = \"0e25504208115c50d\";\r\n\r\nconst useGoogleSearch = (term) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n        )\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setData(result)\r\n        })\r\n    }, [term])\r\n\r\n    return { data }\r\n};\r\n\r\nexport default useGoogleSearch;"]},"metadata":{},"sourceType":"module"}